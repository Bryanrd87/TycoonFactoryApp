// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TycoonFactoryApp.Persistence.DatabaseContext;

#nullable disable

namespace TycoonFactoryApp.Persistence.Migrations
{
    [DbContext(typeof(FactoryDbContext))]
    partial class FactoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TycoonFactoryApp.Domain.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityType = 1,
                            EndDate = new DateTime(2023, 3, 21, 12, 14, 17, 549, DateTimeKind.Local).AddTicks(4048),
                            StartDate = new DateTime(2023, 3, 21, 10, 14, 17, 549, DateTimeKind.Local).AddTicks(4034)
                        },
                        new
                        {
                            Id = 2,
                            ActivityType = 2,
                            EndDate = new DateTime(2023, 3, 21, 14, 14, 17, 549, DateTimeKind.Local).AddTicks(4056),
                            StartDate = new DateTime(2023, 3, 21, 12, 15, 17, 549, DateTimeKind.Local).AddTicks(4055)
                        },
                        new
                        {
                            Id = 3,
                            ActivityType = 1,
                            EndDate = new DateTime(2023, 3, 21, 17, 14, 17, 549, DateTimeKind.Local).AddTicks(4059),
                            StartDate = new DateTime(2023, 3, 21, 14, 15, 17, 549, DateTimeKind.Local).AddTicks(4058)
                        },
                        new
                        {
                            Id = 4,
                            ActivityType = 1,
                            EndDate = new DateTime(2023, 3, 21, 19, 14, 17, 549, DateTimeKind.Local).AddTicks(4060),
                            StartDate = new DateTime(2023, 3, 21, 17, 15, 17, 549, DateTimeKind.Local).AddTicks(4060)
                        },
                        new
                        {
                            Id = 5,
                            ActivityType = 2,
                            EndDate = new DateTime(2023, 3, 21, 21, 14, 17, 549, DateTimeKind.Local).AddTicks(4063),
                            StartDate = new DateTime(2023, 3, 21, 19, 15, 17, 549, DateTimeKind.Local).AddTicks(4062)
                        });
                });

            modelBuilder.Entity("TycoonFactoryApp.Domain.ActivityWorker", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId", "WorkerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("ActivitiesWorkers");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 2,
                            WorkerId = 4
                        },
                        new
                        {
                            ActivityId = 2,
                            WorkerId = 5
                        },
                        new
                        {
                            ActivityId = 2,
                            WorkerId = 6
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 7
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 8
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 9
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 2
                        });
                });

            modelBuilder.Entity("TycoonFactoryApp.Domain.AndroidWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("AndroidWorkers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E"
                        },
                        new
                        {
                            Id = 6,
                            Name = "F"
                        },
                        new
                        {
                            Id = 7,
                            Name = "G"
                        },
                        new
                        {
                            Id = 8,
                            Name = "H"
                        },
                        new
                        {
                            Id = 9,
                            Name = "I"
                        },
                        new
                        {
                            Id = 10,
                            Name = "J"
                        },
                        new
                        {
                            Id = 11,
                            Name = "K"
                        },
                        new
                        {
                            Id = 12,
                            Name = "L"
                        },
                        new
                        {
                            Id = 13,
                            Name = "M"
                        },
                        new
                        {
                            Id = 14,
                            Name = "N"
                        },
                        new
                        {
                            Id = 15,
                            Name = "O"
                        },
                        new
                        {
                            Id = 16,
                            Name = "P"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Q"
                        },
                        new
                        {
                            Id = 18,
                            Name = "R"
                        },
                        new
                        {
                            Id = 19,
                            Name = "S"
                        },
                        new
                        {
                            Id = 20,
                            Name = "T"
                        },
                        new
                        {
                            Id = 21,
                            Name = "U"
                        },
                        new
                        {
                            Id = 22,
                            Name = "V"
                        },
                        new
                        {
                            Id = 23,
                            Name = "W"
                        },
                        new
                        {
                            Id = 24,
                            Name = "X"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Y"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Z"
                        });
                });

            modelBuilder.Entity("TycoonFactoryApp.Domain.ActivityWorker", b =>
                {
                    b.HasOne("TycoonFactoryApp.Domain.Activity", "Activity")
                        .WithMany("AndroidWorkers")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TycoonFactoryApp.Domain.AndroidWorker", "Worker")
                        .WithMany("Activities")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("TycoonFactoryApp.Domain.Activity", b =>
                {
                    b.Navigation("AndroidWorkers");
                });

            modelBuilder.Entity("TycoonFactoryApp.Domain.AndroidWorker", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
